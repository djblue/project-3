KEYWORD	int
IDENTIFIER	fib
DELIMITER	(
KEYWORD	int
IDENTIFIER	n
DELIMITER	)
DELIMITER	{
KEYWORD	int
IDENTIFIER	ans
DELIMITER	[
INTEGER	100
DELIMITER	]
DELIMITER	;
KEYWORD	for
DELIMITER	(
KEYWORD	int
IDENTIFIER	i
OPERATOR	=
INTEGER	0
DELIMITER	;
IDENTIFIER	i
OPERATOR	<
IDENTIFIER	n
DELIMITER	;
IDENTIFIER	i
OPERATOR	+
OPERATOR	+
DELIMITER	)
DELIMITER	{
KEYWORD	if
DELIMITER	(
IDENTIFIER	i
OPERATOR	=
OPERATOR	=
INTEGER	0
OPERATOR	|
OPERATOR	|
IDENTIFIER	i
OPERATOR	=
INTEGER	1
DELIMITER	)
DELIMITER	{
IDENTIFIER	ans
DELIMITER	[
IDENTIFIER	i
DELIMITER	]
OPERATOR	=
INTEGER	1
DELIMITER	;
DELIMITER	}
KEYWORD	else
DELIMITER	{
IDENTIFIER	ans
DELIMITER	[
IDENTIFIER	i
DELIMITER	]
OPERATOR	=
IDENTIFIER	ans
DELIMITER	[
IDENTIFIER	i
OPERATOR	-
INTEGER	1
DELIMITER	]
OPERATOR	+
IDENTIFIER	ans
DELIMITER	[
IDENTIFIER	i
OPERATOR	-
INTEGER	2
DELIMITER	]
DELIMITER	;
DELIMITER	}
DELIMITER	}
KEYWORD	return
IDENTIFIER	ans
DELIMITER	;
DELIMITER	}
KEYWORD	int
IDENTIFIER	main
DELIMITER	(
KEYWORD	int
IDENTIFIER	argc
DELIMITER	,
KEYWORD	char
OPERATOR	*
IDENTIFIER	argv
DELIMITER	[
DELIMITER	]
DELIMITER	)
DELIMITER	{
KEYWORD	int
IDENTIFIER	input
DELIMITER	;
IDENTIFIER	printf
DELIMITER	(
STRING	"Please enter a number >> "
DELIMITER	)
DELIMITER	;
IDENTIFIER	scanf
DELIMITER	(
STRING	"%d"
DELIMITER	,
OPERATOR	&
IDENTIFIER	input
DELIMITER	)
DELIMITER	;
IDENTIFIER	printf
DELIMITER	(
STRING	"\"Fibonacci(%d)\" = %d\n"
DELIMITER	,
IDENTIFIER	input
DELIMITER	,
IDENTIFIER	fib
DELIMITER	(
IDENTIFIER	input
DELIMITER	)
DELIMITER	)
DELIMITER	;
KEYWORD	return
INTEGER	0
DELIMITER	;
DELIMITER	}
